id: scw:java:basic:class-compare
version: 9
metadata:
  name: Do not compare classes/types by their name
  shortDescription: Comparing the class names is less robust than comparing the actual classes
  level: warning
  language: java
  scwCategory: blog:generic
  cweCategory: 480
  enabled: true
  tags: Java basic;SEI CERT;quality;security
  documentation:
    abstract: |-
      Comparing classes/types based on the class name is less robust than comparing the class itself.

      By using the classes of the types themselves, there is less room for error as type checking can be performed. This implicitly checks the packages of the classes as well, which might be forgotten when providing the class name as a string literal. This in turn could lead to a mix-and-match attack in which the attacker creates a class with the same name in a different package.
    searchMatchExample: "obj1.getClass().getName().equals(obj2.getClass().getName())"
    searchNoMatchExample: 'obj1.getClass().getName().equals("java.lang.Integer")'
    references: |-
      <a href="https://wiki.sei.cmu.edu/confluence/display/java/OBJ09-J.+Compare+classes+and+not+class+names">SEI CERT OBJ09-J. Compare classes and not class names</a>
search:
  methodcall:
    args:
      1:
        value:
          not:
            is:
              literal: {}
    name: equals
    "on":
      methodcall:
        name: getName
        "on":
          methodcall:
            name: getClass
availableFixes:
- name: Compare classes instead of names
  actions:
  - rewrite:
      to: '{{{ qualifier.qualifier }}} == {{{ argumentList.expressions.0.qualifier }}}'
      target: self
  exampleBefore: "obj1.getClass().getName().equals(obj2.getClass().getName())"
  exampleAfter: "obj1.getClass() == obj2.getClass()"
