id: scw:logging:slf4j:System.out_consistent_logging
version: 9
metadata:
  name: System.out consistent SLF4J logging
  shortDescription: Replace System.out.print.* with consistent SLF4J error logging
  level: marked_information
  language: java
  scwCategory: insufficient_logging:generic
  enabled: true
  descriptionFile: descriptions/Consistent_SLF4J_logging.html
  tags: SLF4J;framework specific;logging;quality
search:
  methodcall:
    name:
      matches: print.*
    declaration:
      type: java.io.PrintStream
    "on":
      reference:
        name: out
availableFixes:
- name: ' [RECOMMENDED] Replace System.out with SLF4J debug function'
  actions:
  - rewrite:
      to: Logger.debug({{{ arguments }}})
      target: self
  - addField:
      field: private final static org.slf4j.Logger Logger = org.slf4j.LoggerFactory.getLogger({{{ containingClass.containingClass.name }}}.class);
      target: parentClass
- name: '[OPTIONAL] Replace System.out with SLF4J error function'
  actions:
  - rewrite:
      to: Logger.error({{{ arguments }}})
      target: self
  - addField:
      field: private final static org.slf4j.Logger Logger = org.slf4j.LoggerFactory.getLogger({{{ containingClass.containingClass.name }}}.class);
      target: parentClass
- name: '[OPTIONAL] Replace System.out with SLF4J info function'
  actions:
  - rewrite:
      to: logger.info({{{ arguments }}})
      target: self
  - addField:
      field: private final static org.slf4j.Logger Logger = org.slf4j.LoggerFactory.getLogger({{{ containingClass.containingClass.name }}}.class);
      target: parentClass
- name: '[OPTIONAL] Replace System.out with SLF4J warn function'
  actions:
  - rewrite:
      to: Logger.warn({{{ arguments }}})
      target: self
  - addField:
      field: private final static org.slf4j.Logger Logger = org.slf4j.LoggerFactory.getLogger({{{ containingClass.containingClass.name }}}.class);
      target: parentClass
