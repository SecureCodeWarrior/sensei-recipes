id: scw:spring:jdbc:jdbcoperations-statementsetter
version: 8
metadata:
  name: 'Input Validation: Avoid JDBC Injection: Bind variables in prepared statements'
  shortDescription: Could lead to SQL Injection
  level: error
  language: java
  newCodeOnly: false
  scwCategory: injection:sql
  enabled: true
  comment: Any method in JdbcOperations starting with a string is vulnerable to SQLi.
    The are prepared statements, but should still not contain any untrusted input.
  descriptionFile: ""
  tags: Spring;security;Spring Data;framework specific;injection;SQL;OWASP Top 10
search:
  methodcall:
    args:
      1:
        containsUntrustedInput: true
        type: java.lang.String
      any:
        type:
          reference:
            contains: PreparedStatementSetter
          checkInheritance: true
    declaration:
      type: org.springframework.jdbc.core.JdbcOperations
availableFixes:
- name: Use parameterized queries
  actions:
  - parameterize:
      placeholderFormat: '?'
  - rewrite:
      to: |-
        // TODO: Add the untrusted input to the PreparedStatementSetter
        {{{.}}}
